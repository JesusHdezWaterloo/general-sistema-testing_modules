plugins {
    id "edu.sc.seis.launch4j" version "2.4.6"
    id 'java'
    id 'jacoco'
    id 'application'
}

group = 'com.jhw.sistema'

mainClassName = 'com.jhw.sistema.testing_modules.application.Main'


repositories {
    jcenter()
    mavenCentral()
}

allprojects{
    gradle.projectsEvaluated{
        tasks.withType(JavaCompile){
            //options.compilerArgs << "-Xlint:deprecation"
            //options.compilerArgs << "-Xlint:unchecked"
        }
    }
}

dependencies {
    testImplementation 'junit:junit:4.13'

    implementation project(':utils-core')
    
    implementation project(':clean-core-full')
    implementation project(':clean-swing')
    
    implementation project(':swing-derivable_icons')

    implementation project(':swing-material-standards')
    implementation project(':swing-material-core')
    implementation project(':swing-material-prepared')
    implementation project(':swing-material-notifications')
    implementation project(':swing-material-chart')
    implementation project(':swing-material-model')
    
    implementation project(':module-util-personalization')
    implementation project(':module-util-default_configuration')
    implementation project(':module-util-licence')
    implementation project(':module-util-mysql')
    
    implementation project(':utils-export')
    implementation project(':utils-files')
    implementation project(':utils-spring')
    
    implementation project(':module-gestion-contabilidad_empresarial-client')    
    implementation project(':module-gestion-contabilidad_empresarial-standard')
    
    implementation project(':module-gestion-gastos_administrativos-client')    
    implementation project(':module-gestion-gastos_administrativos-standard')
    
    implementation project(':module-admin-kanban-client')    
    implementation project(':module-admin-kanban-standard')
    
    implementation project(':module-util-bug')
    implementation project(':module-util-calc')
    implementation project(':module-util-company')
    implementation project(':module-util-console')
    implementation project(':module-util-tec')
    implementation project(':module-util-rest_config')
    
    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.17'
    
    //EclipseLink
    compile group: 'org.eclipse.persistence', name: 'eclipselink', version: '2.7.6'
    compile group: 'org.eclipse.persistence', name: 'org.eclipse.persistence.jpa', version: '2.7.6'
    
    //injection
    compile group: 'com.google.inject', name: 'guice', version: '4.2.3'
    compile group: 'javax.inject', name: 'javax.inject', version: '1'
}

launch4j {
    headerType = 'gui'
    outfile = 'TestModulosGestion.exe'
    mainClassName = 'com.jhw.testingmodules.gestion.application.Main'
    productName = 'TestModulosGestion'
    bundledJrePath = 'jre'
    icon = "${projectDir}/src/main/resources/icon.ico" //ponerlo de ultimo
}

task deploy(type: Copy){
    def deployFolder = "${projectDir}/!deploy"
    doFirst{
        delete deployFolder
    }
    from "${projectDir}/build/launch4j"//carpeta del launch4j
    into deployFolder
}
task copyJRE(type: Copy){
    def deployFolder = "${projectDir}/!deploy"
    def jre_home = "${projectDir}/jre"
    from jre_home
    into deployFolder + "/" + launch4j.getAt("bundledJrePath")
}
createExe.finalizedBy(deploy)
deploy.finalizedBy(copyJRE)
//build.finalizedBy(createExe)
